[project]
name = "epp_topics"
description = "Effective Programming Practices for Economists: Topics"
requires-python = ">=3.11"
dependencies = [
    "pytask"
]
dynamic = ["version"]
classifiers = [
    "Intended Audience :: Science/Research",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
authors = [
    { name = "Hans-Martin von Gaudecker", email = "hmgaudecker@gmail.com" },
    { name = "Jano≈õ Gabler" },
]
[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
text = "CC-BY-NC-SA-4.0"

[project.urls]
Documentation = "https://github.com/OpenSourceEconomics/epp_topics"
Github = "https://github.com/OpenSourceEconomics/epp_topics"
Tracker = "https://github.com/OpenSourceEconomics/epp_topics/issues"

[build-system]
requires = ["hatchling", "hatch_vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.hooks.vcs]
version-file = "src/epp_topics/_version.py"

[tool.hatch.build.targets.sdist]
exclude = ["tests"]
only-packages = true

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytask.ini_options]
paths = ["./src/epp_topics"]
ignore = [
    "src/epp_topics/python_basics/executing_pytask/screencast/example/",
    "src/epp_topics/projects/what_does_pytask_do/screencast/example/",
]

[tool.ruff]
target-version = "py311"
fix = true
line-length = 88

[tool.ruff.lint]
select = ["ALL"]
extend-ignore = [
    "PLR2004",  # Magic value used in comparison
    "S101",  # Use of `assert` detected.
    "ANN",  # Missing type annotations
    "D100",
    "T201",
    "B018",
    "TRY003",
    "PLR0913",
    "EM101",
    "FBT001",
    "N999", # capitalized module name
    "S602", # `subprocess` call with `shell=True`
    "S110",
    "BLE001",
    "PD901", # `df` used a lot as example variable name
    "D103", # lots of small functions missing docstrings
    "INP001", # implicit namespace packages; clashes with our pytask examples.
    "S301",
    "PD010",
    "PD015",
    "B008", # Do not perform function calls in argument defaults.
    "PT011", # catching broad exceptions in tests is just fine
    "PERF401", # use a list comprehension
]

[tool.ruff.lint.per-file-ignores]
"src/epp_topics/python_basics/executing_pytest/screencast/example/test_cobb_douglas.py" = ["PLR2004"]
"**/*.ipynb" = ["B018", "T201", "E402", "PLR2004"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.pytest.ini_options]
filterwarnings = []
markers = [
    "wip: Tests that are work-in-progress.",
    "unit: Flag for unit tests which target mainly a single function.",
    "integration: Flag for integration tests which may comprise of multiple unit tests.",
    "end_to_end: Flag for tests that cover the whole program.",
]
norecursedirs = ["docs"]

[tool.yamlfix]
line_length = 88
none_representation = "null"
